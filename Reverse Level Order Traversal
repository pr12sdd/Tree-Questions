vector<vector<int>> levelorder(Node * &root)
{
    vector<vector<int>> ans;
    queue<Node *> q;
    q.push(root);
    if(root==NULL)
    {
        return ans;
    }
    while(1)
    {
        int size=q.size();
        if(size==0)
        {
            return ans;
        }
        vector<int> m;
        while(size!=0)
        {
            Node *temp=q.front();
            q.pop();
            m.push_back(temp->data);
            if(temp->left!=NULL)
            {
                q.push(temp->left);
            }
            if(temp->right!=NULL)
            {
                q.push(temp->right);
            }
            size--;
        }
        ans.push_back(m);
    }
}
vector<int> reverseLevelOrder(Node *root)
{
    vector<vector<int>> m;
    m=levelorder(root);
    reverse(m.begin(),m.end());
    vector<int> k;
    for (int i = 0; i < m.size(); i++) {
        for (int j = 0; j < m[i].size(); j++)
    {        
        k.push_back(m[i][j]);  
    }
    }
    return k;
}
